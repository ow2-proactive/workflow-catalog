<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.8"
     xsi:schemaLocation="urn:proactive:jobdescriptor:3.8 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.8/schedulerjob.xsd"
    name="tensorflow_nodesource_delete" 
    priority="normal"
    onTaskError="continueJobExecution"
     maxNumberOfExecution="2">
  <variables>
    <variable name="username" value="USERNAME" model=""/>
    <variable name="password" value="PASSWORD" model=""/>
    <variable name="credentials" value="CREDENTIALS_GENERATED_BY_RESOURCE_MANAGER_PORTAL" model=""/>
    <variable name="rmAddress" value="https://try.activeeon.com/rest/rm/" model=""/>
    <variable name="NodeSourceName" value="TensorFlow" />
    <variable name="nodesNumber" value="2" />
    <variable name="CONTAINER_NAME" value="tf" />
  </variables>
  <taskFlow>
    <task name="delete_tensorflow_nodesource">
      <description>
        <![CDATA[ The simplest task, ran by a bash engine. ]]>
      </description>
      <depends>
        <task ref="delete_docker_container"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
sessionid=$(curl -d "username=$variables_username&password=$variables_password" $variables_rmAddress"/login")

echo "The session ID with current user"

echo $sessionid
             
creds=$variables_credentials

echo "The credential for the current username and password generated from the Resource Manager portal"
             
curl -v -H "sessionid:$sessionid" -d "name=$variables_NodeSourceName&preempt" --data-urlencode "infrastructureFileParameters=$creds" $variables_rmAddress"/nodesource/remove"

echo " A node source is deleted"
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="delete_docker_container">
      <description>
        <![CDATA[ The simplest task, ran by a bash engine. ]]>
      </description>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
docker rm -fv $(docker ps -a -q --filter "name=$variables_CONTAINER_NAME")
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
  </taskFlow>
</job>